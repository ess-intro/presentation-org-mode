# cycle visibility -- hit [TAB] on the following line (a "headlline")
* an org mode file
** some setup

to allow evaluating R code, evaluate this source block by putting
point inside and typing [C-c C-c] (control C followed by control C)
and giving permission for it to be evaluated.
#+name: set-allowed-languages
#+begin_src elisp :results none
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t) (R . t)))
#+end_src

to allow *editing* R code, evaluate this source block, etc.
#+name: requireessrmode
#+begin_src elisp :results none
  (require 'ess-r-mode)
#+end_src


** Source code

A source block can be evaluated, exported, "tangled", edited
#+name: somenorms
#+begin_src R :exports code :tangle somenorms.R
  ## only the code here is exported
  if (TRUE) {
    cat("we did this!\n")
  }
  rnorm(7)
#+end_src

#+RESULTS: somenorms
|  -1.17785501433102 |
|  -1.09310577616741 |
| -0.467161538524595 |
|  -1.63219999705389 |
| -0.166802921625093 |
| -0.171290970964292 |
|  -0.28006416862047 |

- the output of one source block can be used as input to another

#+begin_src R :var avector=somenorms :exports both
  ## here, both the code and the results are exported
  summary(avector)
#+end_src

#+RESULTS:
| Min.   :-1.0295 |
| 1st Qu.:-0.6115 |
| Median :-0.4063 |
| Mean   :-0.4120 |
| 3rd Qu.:-0.1716 |
| Max.   : 0.1181 |

- enter
: [C-c C-e C-s h o]
  and give permission to evaluate the code blocks, to open a web
  browser on an export of just *this* /subtree/.

** =:results= -- Results of evaluation

/value/ versus /output/

#+begin_src R :results value
  cat("42\n")
  invisible(23)
#+end_src

#+RESULTS:
: 23

#+begin_src R :results output
  cat("42\n")
  invisible(23)
#+end_src

#+RESULTS:
: 42

what *kind* of result?  here, a graphic file (named by the =:file=
header argument).

#+begin_src R :file speed.png :results output file graphics :exports both
  ## from "?graphics::plot"
  Speed <- cars$speed
  Distance <- cars$dist
  plot(Speed, Distance, panel.first = grid(8, 8),
       pch = 0, cex = 1.2, col = "blue")
  plot(Speed, Distance,
       panel.first = lines(stats::lowess(Speed, Distance), lty = "dashed"),
       pch = 0, cex = 1.2, col = "blue")

#+end_src

#+RESULTS:
[[file:speed.png]]

([C-c C-o] to open)

** =:session= -- Long-lived state (duration of emacs process)

#+begin_src R :session R :results none
  ## this will run in a session
  demo <- function(a) {
    2*a
  }
#+end_src

