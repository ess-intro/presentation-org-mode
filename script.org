# cycle visibility -- hit [TAB] on the following line (a "headlline")
* an org mode file
** some setup

to allow evaluating R code, evaluate this source block by putting
point inside and typing [C-c C-c] (control C followed by control C)
and giving permission for it to be evaluated.
#+name: set-allowed-languages
#+begin_src elisp :results none
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t) (R . t)))
#+end_src

to allow *editing* R code, evaluate this source block, etc.
#+name: requireessrmode
#+begin_src elisp :results none
  (require 'ess-r-mode)
#+end_src


** Org Mode and its contents

Emacs Org Mode is an outline-structured file format and backing
software that allows you to (among many other things)

***  tables

Org Mode tables are very nice.  (They also include support for
formulae.)

     | Sede      | Max cites | H-index |
     |-----------+-----------+---------|
     | Chile     |    257.72 |   21.39 |
     | Leeds     |    165.77 |   19.68 |
     | Sao Paolo |     71.00 |   11.50 |
     | Stockholm |    134.19 |   14.33 |
     | Morelia   |    257.56 |   17.67 |

** Source code

a source block.  can edit, evaluate, export
#+name: somenorms
#+begin_src R :exports code
  ## only the code here is exported
  rnorm(5)
#+end_src

- the output of one source block can be used as input to another

#+begin_src R :var avector=somenorms :exports both
  ## here, both the code and the results are exported
  summary(avector)
#+end_src

- enter
: [C-e C-s h o]
  and give permission to evaluate the code blocks, to open a web
  browser on an export of just *this* /subtree/.

** =:session= -- Long-lived state (duration of emacs process)

#+begin_src R :session R :results none
  ## this will run in a session
  demo <- function(a) {
    2*a
  }
#+end_src

** =:results= -- Results of evaluation

/value/ versus /output/

#+begin_src R :results value
  cat("42\n")
  invisible(23)
#+end_src

#+begin_src R :results output
  cat("42\n")
  invisible(23)
#+end_src

what *kind* of result?  here, a graphic file (named by the =:file=
header argument).

#+begin_src R :file speed.png :results file graphics
  ## from "?graphics::plot"
  Speed <- cars$speed
  Distance <- cars$dist
  plot(Speed, Distance, panel.first = grid(8, 8),
       pch = 0, cex = 1.2, col = "blue")
  plot(Speed, Distance,
       panel.first = lines(stats::lowess(Speed, Distance), lty = "dashed"),
       pch = 0, cex = 1.2, col = "blue")

#+end_src

([C-c C-o] to open)
